Machine-level Assembler Version 6.3    Wed Sep 23 20:31:25 2020

  LOC    OBJ   SOURCE
hex*dec

0  *0    8014  	ldc msgx	;get input message
1  *1    FFF7  	sout
2  *2    8035  	ldc inbuf	;get address of input buffer
3  *3    FFF6  	sin
4  *4    FFF7  	sout
5  *5    800A  	ldc '\n'
6  *6    FFFB  	aout
7  *7    8035  loop:	ldc inbuf
8  *8    2034  	add length	;index of letter
9  *9    F100  	ldi
A  *10   C00F  	jz done
B  *11   0034  	ld length
C  *12   2033  	add @1
D  *13   1034  	st length
E  *14   D007  	jnz loop
F  *15   8023  done:	ldc outmsg
10 *16   FFF7  	sout
11 *17   0034  	ld length
12 *18   FFFD  	dout
13 *19   FFFF  	halt
14 *20   0045  msgx:	dw "Enter string: "
15 *21   006E
16 *22   0074
17 *23   0065
18 *24   0072
19 *25   0020
1A *26   0073
1B *27   0074
1C *28   0072
1D *29   0069
1E *30   006E
1F *31   0067
20 *32   003A
21 *33   0020
22 *34   0000
23 *35   0074  outmsg: dw "the length is: "
24 *36   0068
25 *37   0065
26 *38   0020
27 *39   006C
28 *40   0065
29 *41   006E
2A *42   0067
2B *43   0074
2C *44   0068
2D *45   0020
2E *46   0069
2F *47   0073
30 *48   003A
31 *49   0020
32 *50   0000
33 *51   0001  @1:	dw 1
34 *52   0000  length:	dw 0
35 *53   0000  inbuf:	dw 81 dup 0	;reserve 81 spots with 0 filling them
86 *134  ========= end of buffer.mas =============================


         Symbol/Cross-Reference Table

Symbol                   Address     References
                          (hex)       (hex)

 loop                      7           E  
 done                      F           A  
 msgx                      14          0  
 outmsg                    23          F  
 @1                        33          C  
 length                    34          8   B   D   11 
 inbuf                     35          2   7  

Input file   = buffer.mas
Output file  = buffer.mac
List file    = buffer.lst 
Number base  = decimal
Label status = case sensitive
