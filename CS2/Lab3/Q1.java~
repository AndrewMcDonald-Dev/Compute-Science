class Q1
{
  public staic void main(String[] args){
    
  }
}
class Shape
{
  //Attributes
  private int numOfSides;
  private String color;
  private boolean striped;
 
  //Constructors
  public Shape(int s,String c,boolean str)
  {
    numOfSides=s;
    color=c;
    striped=str;
  }
  public Shape()
  {
    numOfSides=4;
    color="red";
    striped=false;
  }
 
  //get methods
  public int getNumOfSides()
  {
    return numOfSides;
  }
  public String getColor()
  {
    return color;
  }
  public boolean getStriped()
  {
    return striped;
  }
  
  //set methods
  public void setNumOfSides(int n)
  {
    numOfSides=n;
  }
  public void setColor(String c)
  {
    color=c;
  }
  public void setStriped(boolean b)
  {
    striped=b;
  }
  
  //Methods
 
  public String toString()
  {
    return "numOfSides: "+numOfSides+"\ncolor: "+color+"\nstriped: "+striped;
  }
  public boolean equals(Shape s)
  {
    if(this.numOfSides==s.getNumOfSides() && this.color.equals(s.getColor()) && this.striped==s.getStriped())
      return true;
    return false;
  }
}
class Triangle extends Shape
{
  //Attributes
  private double side1;
  private double side2;
  private double side3;
  
  //Constructors
  public Triangle(){
    side1=1.0;
    side2=1.0;
    side3=1.0;
  }
  public Triangle(double s1,double s2,double s3){
    side1=s1;
    side2=s2;
    side3=s3;
  }
  public Triangle(double s1,double s2,double s3,int n,String c,boolean s){
    side1=s1;
    side2=s2;
    side3=s3;
    super(n,c,s);
  }
  
  //Methods
  public double perimeter(){
    int sum=0;
    sum+=side1;
    sum+=side2;
    sum+=side3;
    return sum/2;
  }
  public double area(){
    int s=perimeter();
    return Math.sqrt(s(s-side1)(s-side2)(s-side3));
  }
  public boolean equals(Triangle t){
    if(super.equals(t)){
      if(this.side1==t.getSide1() && this.side2==t.getSide2 && this.side3==t.getSide3){
        return true;
      }
    }
    return false;
  }
  public String toString(){
    return "numOfSides: "+getNumberOfSides()+"\ncolor: "+getColor()+"\nStriped: "+getStriped+
      "\nTriangle \n           side1: "+side1+"\n           side2: "+side2+"\n           side3: "+side3
    +"\n           area: "+area()+"\n           perimeter: "+perimeter();
  }
  
  //get methods
  public double getSide1(){
    return side1;
  }
  public double getSide2(){
    return side2;
  }
  public double getSide3(){
    return side3;
  }
  
  //set methods
  public void setSide1(double n){
    side1=n;
  }
  public void setSide2(double n){
    side2=n;
  }
  public void setSide3(double n){
    side3=n;
  }
}

